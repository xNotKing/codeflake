---
import Layout from '../../layouts/Layout.astro';
import Nav from '../../components/Nav.astro';
---
<Layout title="Codeflake">
	<Nav>
		<a href="/">Home</a>
		<a href="/cs">CS</a>
	</Nav>
	<main>
		<h1 style="margin-bottom: 40px; text-align: center;">Codeflake</h1>
		<p>Learn web development, computer science and a lot more.</p>
		<button onclick="share()" id="share">Share</button>
		<div class="link"></div>
		<div class="editor">
			<textarea placeholder="Start coding HTML" class="html"></textarea>
			<textarea placeholder="Start coding CSS" class="css"></textarea>
		</div>
		<iframe class="editoroutput" src="random" style="margin-top: 40px;"></iframe>
	</main>
	<script defer>
		let url = new URL(location.href)
		const urlParams = new URLSearchParams(url.search);
		if (urlParams.get("html") && urlParams.get("css")) {
			document.querySelector(".html").value = decodeURI(urlParams.get("html"))
			document.querySelector(".css").value = decodeURI(urlParams.get("css"))
			let html = urlParams.get("html")
			let css = urlParams.get("css")
			var doc = document.querySelector(".editoroutput").contentWindow.document;
			doc.open();
			doc.write(`${html}<style> ${css} </style>`);
			doc.close();
		}
		if (localStorage.getItem("html") && localStorage.getItem("css") && !urlParams.get("html") && !urlParams.get("css")) {
			document.querySelector(".html").value = localStorage.getItem("html")
			document.querySelector(".css").value = localStorage.getItem("css")
			let html = localStorage.getItem("html")
			let css = localStorage.getItem("css")
			var doc = document.querySelector(".editoroutput").contentWindow.document;
			doc.open();
			doc.write(`${html}<style> ${css} </style>`);
			doc.close();
		}
		document.querySelector(".html").addEventListener("input", () => {
			let code = document.querySelector(".html").value
			let css = document.querySelector(".css").value
			var doc = document.querySelector(".editoroutput").contentWindow.document;
			code = document.querySelector(".html").value
			doc.open();
			doc.write(`${code}<style> ${css} </style>`);
			doc.close();
			localStorage.setItem("html", `${code}`)
		})
		document.querySelector(".css").addEventListener("input", () => {
			var doc = document.querySelector(".editoroutput").contentWindow.document;
			let code = document.querySelector(".css").value
			let html = document.querySelector(".html").value
			doc.open();
			doc.write(`${html}<style> ${code} </style>`);
			doc.close();
			localStorage.setItem("css", `${code}`)
		})
		const share = () => {
			let html = encodeURI(document.querySelector(".html").value)
			let css = encodeURI(document.querySelector(".css").value)
			document.querySelector(".link").innerText = `https://${location.hostname}/challenge/calculator-html-css?html=${html}&css=${css}`
		}
	</script>
</Layout>
<style>
	@import url('https://fonts.googleapis.com/css2?family=Fira+Sans&display=swap');
	* {
		margin: auto;
		padding: auto;
		box-sizing: border-box;
	}
	body {
		overflow-x: hidden;
	}
	main {
		margin: auto;
		padding: 1.5rem;
		width: 100%;
	}
	#share {
		width: 100%;
		border-radius: 7px;
		border: none;
		background: #e2e2e2;
		color: #000;
		padding: 10px;
		margin-bottom: 20px;
		margin-top: 20px;
		font-size: 18px;
	}
	.link {
		margin: 0;
		text-align: start;
		width: 60%;
		overflow-x: auto;
		margin-bottom: 20px;
	}
	div.editor {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		gap: 10px;
	}
	iframe {
		outline: none;
		border: none;
		width: 100%;
		height: 100vh;
	}
	textarea {
		border-radius: 7px;
		outline: none;
		border: none;
		resize: none;
		width: 100%;
		padding: 8px;
		min-height: 300px;
		color: #fff;
		background-color: rgb(54, 53, 81);
	}
	textarea::placeholder, textarea {
		font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
		font-size: 16px;
		color: #fff;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
		width: 100%;
	}
	a {
        text-decoration: none;
        color: #000;
    }
	@media (max-width: 600px) {
		.link-card-grid {
			grid-template-columns: repeat(2, 1fr);
		}
	}
	@media (max-width: 500px) {
		.link-card-grid {
			grid-template-columns: repeat(1, 1fr);
		}
	}
</style>
